{"version":3,"sources":["components/NameForm/NameForm.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/Container/Container.module.css","redux/actions.js","redux/operations.js","redux/selectors.js","components/Loader/Loader.jsx","components/ContactList/ContactList.jsx","components/NameForm/NameForm.jsx","components/Filter/Filter.jsx","components/Container/Container.jsx","App.js","redux/reducers.js","redux/store.js","index.js"],"names":["module","exports","addContactRequest","createAction","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","fetchContactRequest","fetchContactSuccess","fetchContactError","changeFilter","axios","defaults","baseURL","getContacts","state","contacts","items","getFilter","filter","getError","error","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","name","includes","override","css","Loader","color","loading","size","ContactList","useSelector","dispatch","useDispatch","onDeleteContact","id","contactId","actions","delete","then","catch","useEffect","get","data","length","map","phone","className","s","container","button","type","onClick","message","Nameform","useState","setName","setPhone","handleChange","event","currentTarget","value","nameInputId","shortid","generate","phoneInputId","form","onSubmit","preventDefault","find","contact","checkRepeatName","checkRepeatPhone","trim","alert","post","addContact","label","onChange","Filter","e","target","Container","children","App","createReducer","_","payload","action","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","reducers","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9400716f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NameForm_form__-MRV4\",\"container\":\"NameForm_container__lO4b1\",\"label\":\"NameForm_label__RaiAb\",\"input\":\"NameForm_input__1k-x0\",\"button\":\"NameForm_button__3qDyw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ContactList_container__2Ue1T\",\"name\":\"ContactList_name__2tMOL\",\"button\":\"ContactList_button__29KBr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__e-15E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__1W9pF\"};","// import axios from 'axios';\nimport { createAction } from '@reduxjs/toolkit';\n// import { addContact } from '../services/contact-api';\n\nexport const addContactRequest = createAction('phonebook/addContactRequest');\nexport const addContactSuccess = createAction('phonebook/addContactSuccsess');\nexport const addContactError = createAction('phonebook/addContactError');\n\nexport const deleteContactRequest = createAction('phonebook/deleteContactRequest');\nexport const deleteContactSuccess = createAction('phonebook/deleteContactSuccsess');\nexport const deleteContactError = createAction('phonebook/deleteContactError');\n\nexport const fetchContactRequest = createAction('phonebook/fetchContactRequest');\nexport const fetchContactSuccess = createAction('phonebook/fetchContactSuccsess');\nexport const fetchContactError = createAction('phonebook/fetchContactError');\n\nexport const changeFilter=createAction('phonebook/changeFilter')\n\n\n// eslint-disable-next-line import/no-anonymous-default-export\n \n","import axios from 'axios';\r\nimport * as actions from './actions';\r\n\r\naxios.defaults.baseURL = 'http://localhost:4000';\r\n\r\nexport const addContact = (name,phone)=>dispatch => {\r\n    const contact = {\r\n        name,\r\n        phone\r\n        \r\n    };\r\n\r\n    dispatch(actions.addContactRequest());\r\n     \r\n   \r\n    axios\r\n        .post('/Contactlist', contact)\r\n        .then(({ data }) =>\r\n            dispatch( actions.addContactSuccess(data) ))\r\n        .catch(error => dispatch(actions.addContactError(error)));\r\n    \r\n};\r\n\r\nexport const deleteContact = contactId => dispatch => {\r\n    \r\n    dispatch(actions.deleteContactRequest());\r\n\r\n    axios\r\n        .delete(`./Contactlist/${contactId}`)\r\n        .then(() =>\r\n            dispatch(actions.deleteContactSuccess(contactId)))\r\n        .catch(error => dispatch(actions.deleteContactError(error)));\r\n};\r\n\r\nexport const fetchContacts = () => dispatch => {\r\n  dispatch(actions.fetchContactRequest());\r\n\r\n  axios\r\n    .get('/Contactlist')\r\n      .then(({ data }) =>\r\n          dispatch(actions.fetchContactSuccess(data)))\r\n    .catch(error => dispatch(actions.fetchContactError(error)));\r\n};\r\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getContacts = state => state.contacts.items;\nexport const getFilter = state => state.contacts.filter;\nexport const getError = state => state.contacts.error;\nexport const getLoading = state => state.contacts.loading;\n\n// export const getVisibleContacts = (state) => {\n//   const contacts = getContacts(state);\n//   const filter = getFilter(state);\n//   const normalizedFilter = filter.toLowerCase();\n    \n//   return contacts.filter(({ name }) =>\n//     name && name.toLowerCase().includes(normalizedFilter)\n//   )\n// };\n\nexport const getVisibleContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(({name}) =>\n      name&&name.toLowerCase().includes(normalizedFilter),\n    );\n  },\n);\n\nexport const getLoader = state => state.contacts.loading;","\r\nimport { css } from \"@emotion/core\";\r\nimport FadeLoader from \"react-spinners/FadeLoader\";\r\n\r\n// Can be a string as well. Need to ensure each key-value pair ends with ;\r\nconst override = css`\r\n  display: block;\r\n  margin: 0 auto;`;\r\n\r\nfunction Loader() {\r\n  return (\r\n       <FadeLoader color={\"#4a4a4a\"} loading={true} css={override} size={150} />\r\n  );\r\n}\r\n\r\nexport default Loader;","  \nimport {useEffect} from 'react';\nimport s from './ContactList.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport * as operations from '../../redux/operations';\nimport { getVisibleContacts, getError } from '../../redux/selectors';\nimport Loader from '../Loader/Loader';\n\n\nfunction ContactList() {\n  const contacts = useSelector(getVisibleContacts);\n  const error = useSelector(getError);\n\n  const dispatch = useDispatch();\n  const onDeleteContact = id => dispatch(operations.deleteContact(id));\n\n  useEffect(() => {\n    dispatch(operations.fetchContacts());\n  }, [dispatch]);\n\n  //   return (\n  //  <ul >\n  //           {contacts.map(({ id, name, phone }) => (\n  //               <li className={ s.container} key={id} >\n  //               <p className={ s.name}>{name}</p>\n  //               <p className={ s.name}>{phone}</p>\n  //               <button className={ s.button} type=\"button\" onClick={() => onDeleteContact(id)}>Удалить</button>\n  //             </li>\n  //           ))}\n  //         </ul>\n  //   );\n  \n  if (contacts.length > 0 && !error) {\n    return (\n      <ul >\n        {contacts.map(({ id, name, phone }) => (\n          <li className={s.container} key={id} >\n            <p className={s.name}>{name}</p>\n            <p className={s.name}>{phone}</p>\n            <button className={s.button} type=\"button\" onClick={() => onDeleteContact(id)}>Удалить</button>\n          </li>\n        ))}\n      </ul>)\n  }\n  else if (contacts.length === 0 && !error) {\n    return (\n      <div>\n        <Loader />\n        <p>Ну давай подожем!</p>\n      </div>\n    )\n  }\n  else if (error) {\n    return (\n      <div>\n        {error && <h2>{error.message}</h2>}\n        <p>Ща гляну.Наверное снова кот провода погрыз!</p>\n      </div>\n    )\n  }\n  else {\n    return (\n      <Loader />\n    )\n  }\n}\n//   return (\n//     <>\n      \n//       {contacts.length > 0 && !error ? (\n//         <ul >\n//           {contacts.map(({ id, name, phone }) => (\n//               <li className={ s.container} key={id} >\n//               <p className={ s.name}>{name}</p>\n//               <p className={ s.name}>{phone}</p>\n//               <button className={ s.button} type=\"button\" onClick={() => onDeleteContact(id)}>Удалить</button>\n//             </li>\n//           ))}\n//         </ul>) :\n//         (<div>\n//           {error && <h2>{error.message}</h2>}\n//           <p>Че смотришь? Пиши контакты!</p>\n//         </div>)\n  \n//       }\n//     </>\n//   );\n// }\n\nexport default ContactList;","import { useState} from 'react';\nimport shortid from 'shortid';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getContacts } from '../../redux/selectors';\nimport {addContact} from '../../redux/operations';\nimport s from './NameForm.module.css';\n\nexport default function Nameform() {\n    const contacts = useSelector(getContacts);\n    const dispatch = useDispatch();\n    const [name, setName] = useState('');\n    const [phone, setPhone] = useState('');\n\n      const handleChange = event => {\n        const { name, value } = event.currentTarget;\n\n        switch (name) {\n            case 'name':\n                setName(value);\n                break;\n            case 'phone':\n                setPhone(value);\n                break;\n            default: return;\n        };\n    };\n\n    const resetinput = () => {\n        setName('');\n        setPhone('');\n\n\n    }\n\n    const checkRepeatName = name => {\n        return contacts.find(contact =>contact.name&& contact.name.toLowerCase() === name.toLowerCase())\n    };  \n\n    const checkRepeatPhone = phone => { return contacts.find(contact => contact.phone === phone) };\n\n    const handleSubmit = event => {\n        event.preventDefault();\n       \n        if (checkRepeatName(name)) {\n         alert(`${name} is already added.`)\n        }\n        else if (checkRepeatPhone(phone)) {\n            alert(`${phone} is already added.`)\n        }\n        else if (name.trim() === '' || phone.trim() === '') {\n            alert('All of inputs must be not empty')\n            }\n        else {\n            dispatch(addContact(name,phone));\n        }\n        resetinput();\n\n        \n    };\n    \n    const nameInputId = shortid.generate();\n    const phoneInputId = shortid.generate();\n\n    return (\n        <>\n            <form className={s.form} onSubmit={handleSubmit}>\n                <div className={s.container}>\n                    <label className={s.label}>\n                        Name\n                            <input\n                            type=\"text\"\n                            name='name'\n                            value={name}\n                            onChange={handleChange}\n                            id={nameInputId}\n                        />\n                    </label >\n                    <label className={s.label}>\n                        Phone\n                             <input\n                            type=\"text\"\n                            name='phone'\n                            value={phone}\n                            onChange={handleChange}\n                            id={phoneInputId}\n                        />\n                    </label>\n                        \n\n                    <button className={s.button} type='submit'>Add contact</button>\n\n                </div>\n            </form>\n        </>\n    );\n\n\n};\n","\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getFilter } from '../../redux/selectors';\nimport * as actions from '../../redux/actions';\nimport s from './Filter.module.css';\n\nexport default function Filter() {\n    \n    const value = useSelector(getFilter);\n    const dispatch = useDispatch();\n    const change = e => dispatch(actions.changeFilter(e.target.value));\n    return (\n     <label className={ s.label}>\n            Name filter\n            <input type=\"text\"\n                value={value}\n                onChange={change} />\n    </label>\n)   \n\n}\n","import PropTypes from 'prop-types';\nimport s from './Container.module.css';\n\nfunction Container({ children }) {\n  return <div className={s.container}>{children}</div>;\n}\n\nContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Container;","\nimport ContactList from './components/ContactList';\nimport NameForm from './components/NameForm/NameForm';\nimport Filter from './components/Filter';\nimport Container from './components/Container';\n\nimport './App.css';\n\nexport default function App() {\n  \n    return (\n       <Container>\n       <h1 className=\"title\"> Phonebook </h1>\n       <h2 className=\"subtitle\">Add new contact</h2>\n       <NameForm  />\n       <h2 className=\"subtitle\">Find contact</h2>\n       <Filter />\n       <h2 className=\"subtitle\">Contact list</h2>\n       <ContactList />\n       </Container>\n    )\n}\n\n","  \nimport { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport {\n    addContactRequest,\n    addContactSuccess,\n    addContactError,\n    deleteContactRequest,\n    deleteContactSuccess,\n    deleteContactError,\n    fetchContactRequest,\n    fetchContactSuccess,\n    fetchContactError,\n    changeFilter    \n} from './actions';\n\nconst items = createReducer(\n    [], {\n    [fetchContactSuccess]: (_, { payload }) => payload,\n    [addContactSuccess]: (state, { payload }) => [...state, payload],\n    [deleteContactSuccess]: (state, { payload }) => state.filter(({ id }) => id !== payload),\n});\n\nconst loading = createReducer(\n    false, {\n    [fetchContactRequest]: () => true,\n    [fetchContactSuccess]: () => false,\n    [fetchContactError]: () => false,\n    [addContactRequest]: () => true,\n    [addContactSuccess]: () => false,\n    [addContactError]: () => false,\n    [deleteContactRequest]: () => true,\n    [deleteContactSuccess]: () => false,\n    [deleteContactError]: () => false,\n}\n);\n\nconst filter = createReducer('', {\n    [changeFilter]: (state, { payload }) => payload,\n});\n\nconst error = createReducer(null, {\n    [fetchContactError]: (_, action) => action.payload,\n    [fetchContactRequest]: () => null,\n    [addContactRequest]:() => null,\n    [deleteContactRequest]:() => null,\n    [deleteContactError]: (_, action) => action.payload,\n    [addContactError]: (_, action) => action.payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n  loading,\nerror\n});","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport {\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport reducers from './reducers';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\n\nexport const store = configureStore({\n  reducer: {\n    contacts:reducers,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n// import { PersistGate } from 'redux-persist/integration/react';\nimport { store, /*persistor*/ } from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/* <PersistGate loading={null} persistor={persistor}> */}\n         <BrowserRouter>\n          <App />\n          </BrowserRouter>\n        {/* </PersistGate> */}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}